{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Beekeepers API",
    "description": "API Documentation for Beekeepers application"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://beekeepers-back.onrender.com/api/" }],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "User registration",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/verify/{verificationToken}": {
      "get": {
        "summary": "Verify user account",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Token received for email verification"
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "summary": "Resend verification email",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Request object for resending verification email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/verifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Request object for user login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "summary": "Get current user",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Authentication"],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/auth/water-rate": {
      "patch": {
        "summary": "Update user's water rate",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Request object for updating water rate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waterRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/auth/user": {
      "patch": {
        "summary": "Update user information",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Request object for updating user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    },
    "/auth/avatar": {
      "patch": {
        "summary": "Update user's avatar",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Request object for updating user's avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatarURL": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized - Invalid token"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "registerRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "test@test.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 8,
            "example": "12345678"
          }
        }
      },
      "registerResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token for authentication"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "test@test.com"
          },
          "date": {
            "type": "string",
            "description": "Date of registration",
            "example": "2024-03-24T17:10:04.119Z"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          },
          "dailyNormaWater": {
            "type": "number",
            "description": "User's daily water norm",
            "example": 1800
          },
          "theme": {
            "type": "string",
            "description": "User's preferred theme",
            "example": "light"
          },
          "verify": {
            "type": "boolean",
            "description": "User's verification status"
          },
          "verificationToken": {
            "type": "string",
            "description": "Token for user verification"
          }
        }
      },
      "verifyRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "loginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        }
      },
      "userResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "date": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dailyNormaWater": {
            "type": "number"
          },
          "theme": {
            "type": "string"
          },
          "verify": {
            "type": "boolean"
          },
          "verificationToken": {
            "type": "string"
          }
        }
      },
      "waterRateRequest": {
        "type": "object",
        "properties": {
          "dailyWaterNorma": {
            "type": "number"
          }
        }
      },
      "updateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "gender": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          }
        }
      }
    }
  }
}
